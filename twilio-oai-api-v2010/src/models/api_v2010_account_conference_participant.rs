/*
 * Twilio - Api
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.20.2
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ApiV2010AccountConferenceParticipant {
    /// The SID of the Account that created the resource
    #[serde(rename = "account_sid", skip_serializing_if = "Option::is_none")]
    pub account_sid: Option<String>,
    /// The SID of the Call the resource is associated with
    #[serde(rename = "call_sid", skip_serializing_if = "Option::is_none")]
    pub call_sid: Option<String>,
    /// The SID of the participant who is being `coached`
    #[serde(rename = "call_sid_to_coach", skip_serializing_if = "Option::is_none")]
    pub call_sid_to_coach: Option<String>,
    /// Indicates if the participant changed to coach
    #[serde(rename = "coaching", skip_serializing_if = "Option::is_none")]
    pub coaching: Option<bool>,
    /// The SID of the conference the participant is in
    #[serde(rename = "conference_sid", skip_serializing_if = "Option::is_none")]
    pub conference_sid: Option<String>,
    /// The RFC 2822 date and time in GMT that the resource was created
    #[serde(rename = "date_created", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// The RFC 2822 date and time in GMT that the resource was last updated
    #[serde(rename = "date_updated", skip_serializing_if = "Option::is_none")]
    pub date_updated: Option<String>,
    /// Whether the conference ends when the participant leaves
    #[serde(rename = "end_conference_on_exit", skip_serializing_if = "Option::is_none")]
    pub end_conference_on_exit: Option<bool>,
    /// Whether the participant is on hold
    #[serde(rename = "hold", skip_serializing_if = "Option::is_none")]
    pub hold: Option<bool>,
    /// The label of this participant
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    /// Whether the participant is muted
    #[serde(rename = "muted", skip_serializing_if = "Option::is_none")]
    pub muted: Option<bool>,
    /// Whether the conference starts when the participant joins the conference
    #[serde(rename = "start_conference_on_enter", skip_serializing_if = "Option::is_none")]
    pub start_conference_on_enter: Option<bool>,
    /// The status of the participant's call in a session
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// The URI of the resource, relative to `https://api.twilio.com`
    #[serde(rename = "uri", skip_serializing_if = "Option::is_none")]
    pub uri: Option<String>,
}

impl ApiV2010AccountConferenceParticipant {
    pub fn new() -> ApiV2010AccountConferenceParticipant {
        ApiV2010AccountConferenceParticipant {
            account_sid: None,
            call_sid: None,
            call_sid_to_coach: None,
            coaching: None,
            conference_sid: None,
            date_created: None,
            date_updated: None,
            end_conference_on_exit: None,
            hold: None,
            label: None,
            muted: None,
            start_conference_on_enter: None,
            status: None,
            uri: None,
        }
    }
}

/// The status of the participant's call in a session
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "queued")]
    Queued,
    #[serde(rename = "connecting")]
    Connecting,
    #[serde(rename = "ringing")]
    Ringing,
    #[serde(rename = "connected")]
    Connected,
    #[serde(rename = "complete")]
    Complete,
    #[serde(rename = "failed")]
    Failed,
}

