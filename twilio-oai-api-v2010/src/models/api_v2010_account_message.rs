/*
 * Twilio - Api
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.20.3
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ApiV2010AccountMessage {
    /// The SID of the Account that created the resource
    #[serde(rename = "account_sid", skip_serializing_if = "Option::is_none")]
    pub account_sid: Option<String>,
    /// The API version used to process the message
    #[serde(rename = "api_version", skip_serializing_if = "Option::is_none")]
    pub api_version: Option<String>,
    /// The message text
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<String>,
    /// The RFC 2822 date and time in GMT that the resource was created
    #[serde(rename = "date_created", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// The RFC 2822 date and time in GMT when the message was sent
    #[serde(rename = "date_sent", skip_serializing_if = "Option::is_none")]
    pub date_sent: Option<String>,
    /// The RFC 2822 date and time in GMT that the resource was last updated
    #[serde(rename = "date_updated", skip_serializing_if = "Option::is_none")]
    pub date_updated: Option<String>,
    /// The direction of the message
    #[serde(rename = "direction", skip_serializing_if = "Option::is_none")]
    pub direction: Option<Direction>,
    /// The error code associated with the message
    #[serde(rename = "error_code", skip_serializing_if = "Option::is_none")]
    pub error_code: Option<i32>,
    /// The description of the error_code
    #[serde(rename = "error_message", skip_serializing_if = "Option::is_none")]
    pub error_message: Option<String>,
    /// The phone number that initiated the message
    #[serde(rename = "from", skip_serializing_if = "Option::is_none")]
    pub from: Option<String>,
    /// The SID of the Messaging Service used with the message.
    #[serde(
        rename = "messaging_service_sid",
        skip_serializing_if = "Option::is_none"
    )]
    pub messaging_service_sid: Option<String>,
    /// The number of media files associated with the message
    #[serde(rename = "num_media", skip_serializing_if = "Option::is_none")]
    pub num_media: Option<String>,
    /// The number of messages used to deliver the message body
    #[serde(rename = "num_segments", skip_serializing_if = "Option::is_none")]
    pub num_segments: Option<String>,
    /// The amount billed for the message
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    /// The currency in which price is measured
    #[serde(rename = "price_unit", skip_serializing_if = "Option::is_none")]
    pub price_unit: Option<String>,
    /// The unique string that identifies the resource
    #[serde(rename = "sid", skip_serializing_if = "Option::is_none")]
    pub sid: Option<String>,
    /// The status of the message
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// A list of related resources identified by their relative URIs
    #[serde(rename = "subresource_uris", skip_serializing_if = "Option::is_none")]
    pub subresource_uris: Option<serde_json::Value>,
    /// The phone number that received the message
    #[serde(rename = "to", skip_serializing_if = "Option::is_none")]
    pub to: Option<String>,
    /// The URI of the resource, relative to `https://api.twilio.com`
    #[serde(rename = "uri", skip_serializing_if = "Option::is_none")]
    pub uri: Option<String>,
}

impl ApiV2010AccountMessage {
    pub fn new() -> ApiV2010AccountMessage {
        ApiV2010AccountMessage {
            account_sid: None,
            api_version: None,
            body: None,
            date_created: None,
            date_sent: None,
            date_updated: None,
            direction: None,
            error_code: None,
            error_message: None,
            from: None,
            messaging_service_sid: None,
            num_media: None,
            num_segments: None,
            price: None,
            price_unit: None,
            sid: None,
            status: None,
            subresource_uris: None,
            to: None,
            uri: None,
        }
    }
}

/// The direction of the message
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Direction {
    #[serde(rename = "inbound")]
    Inbound,
    #[serde(rename = "outbound-api")]
    OutboundApi,
    #[serde(rename = "outbound-call")]
    OutboundCall,
    #[serde(rename = "outbound-reply")]
    OutboundReply,
}
/// The status of the message
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "queued")]
    Queued,
    #[serde(rename = "sending")]
    Sending,
    #[serde(rename = "sent")]
    Sent,
    #[serde(rename = "failed")]
    Failed,
    #[serde(rename = "delivered")]
    Delivered,
    #[serde(rename = "undelivered")]
    Undelivered,
    #[serde(rename = "receiving")]
    Receiving,
    #[serde(rename = "received")]
    Received,
    #[serde(rename = "accepted")]
    Accepted,
    #[serde(rename = "scheduled")]
    Scheduled,
    #[serde(rename = "read")]
    Read,
    #[serde(rename = "partially_delivered")]
    PartiallyDelivered,
    #[serde(rename = "canceled")]
    Canceled,
}
