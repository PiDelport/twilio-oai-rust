/*
 * Twilio - Events
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.20.3
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EventsV1Sink {
    /// The date this Sink was created
    #[serde(rename = "date_created", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// The date this Sink was updated
    #[serde(rename = "date_updated", skip_serializing_if = "Option::is_none")]
    pub date_updated: Option<String>,
    /// Sink Description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Nested resource URLs.
    #[serde(rename = "links", skip_serializing_if = "Option::is_none")]
    pub links: Option<serde_json::Value>,
    /// A string that uniquely identifies this Sink.
    #[serde(rename = "sid", skip_serializing_if = "Option::is_none")]
    pub sid: Option<String>,
    /// JSON Sink configuration.
    #[serde(rename = "sink_configuration", skip_serializing_if = "Option::is_none")]
    pub sink_configuration: Option<serde_json::Value>,
    /// Sink type.
    #[serde(rename = "sink_type", skip_serializing_if = "Option::is_none")]
    pub sink_type: Option<SinkType>,
    /// The Status of this Sink
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// The URL of this resource.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl EventsV1Sink {
    pub fn new() -> EventsV1Sink {
        EventsV1Sink {
            date_created: None,
            date_updated: None,
            description: None,
            links: None,
            sid: None,
            sink_configuration: None,
            sink_type: None,
            status: None,
            url: None,
        }
    }
}

/// Sink type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SinkType {
    #[serde(rename = "kinesis")]
    Kinesis,
    #[serde(rename = "webhook")]
    Webhook,
    #[serde(rename = "segment")]
    Segment,
}
/// The Status of this Sink
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "initialized")]
    Initialized,
    #[serde(rename = "validating")]
    Validating,
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "failed")]
    Failed,
}
