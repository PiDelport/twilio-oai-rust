/*
 * Twilio - Messaging
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.20.3
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MessagingV1ServiceUsAppToPerson {
    /// The SID of the Account that created the resource
    #[serde(rename = "account_sid", skip_serializing_if = "Option::is_none")]
    pub account_sid: Option<String>,
    /// A2P Brand Registration SID
    #[serde(
        rename = "brand_registration_sid",
        skip_serializing_if = "Option::is_none"
    )]
    pub brand_registration_sid: Option<String>,
    /// The Campaign Registry (TCR) Campaign ID.
    #[serde(rename = "campaign_id", skip_serializing_if = "Option::is_none")]
    pub campaign_id: Option<String>,
    /// Campaign status
    #[serde(rename = "campaign_status", skip_serializing_if = "Option::is_none")]
    pub campaign_status: Option<String>,
    /// The ISO 8601 date and time in GMT when the resource was created
    #[serde(rename = "date_created", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// The ISO 8601 date and time in GMT when the resource was last updated
    #[serde(rename = "date_updated", skip_serializing_if = "Option::is_none")]
    pub date_updated: Option<String>,
    /// A short description of what this SMS campaign does
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Indicate that this SMS campaign will send messages that contain links
    #[serde(rename = "has_embedded_links", skip_serializing_if = "Option::is_none")]
    pub has_embedded_links: Option<bool>,
    /// Indicates that this SMS campaign will send messages that contain phone numbers
    #[serde(rename = "has_embedded_phone", skip_serializing_if = "Option::is_none")]
    pub has_embedded_phone: Option<bool>,
    /// Indicates whether the campaign was registered externally or not
    #[serde(
        rename = "is_externally_registered",
        skip_serializing_if = "Option::is_none"
    )]
    pub is_externally_registered: Option<bool>,
    /// Message samples
    #[serde(rename = "message_samples", skip_serializing_if = "Option::is_none")]
    pub message_samples: Option<Vec<String>>,
    /// The SID of the Messaging Service the resource is associated with
    #[serde(
        rename = "messaging_service_sid",
        skip_serializing_if = "Option::is_none"
    )]
    pub messaging_service_sid: Option<String>,
    /// A boolean that specifies whether campaign is a mock or not.
    #[serde(rename = "mock", skip_serializing_if = "Option::is_none")]
    pub mock: Option<bool>,
    /// Rate limit and/or classification set by each carrier
    #[serde(rename = "rate_limits", skip_serializing_if = "Option::is_none")]
    pub rate_limits: Option<serde_json::Value>,
    /// The unique string that identifies a US A2P Compliance resource
    #[serde(rename = "sid", skip_serializing_if = "Option::is_none")]
    pub sid: Option<String>,
    /// The absolute URL of the US App to Person resource
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// A2P Campaign Use Case.
    #[serde(
        rename = "us_app_to_person_usecase",
        skip_serializing_if = "Option::is_none"
    )]
    pub us_app_to_person_usecase: Option<String>,
}

impl MessagingV1ServiceUsAppToPerson {
    pub fn new() -> MessagingV1ServiceUsAppToPerson {
        MessagingV1ServiceUsAppToPerson {
            account_sid: None,
            brand_registration_sid: None,
            campaign_id: None,
            campaign_status: None,
            date_created: None,
            date_updated: None,
            description: None,
            has_embedded_links: None,
            has_embedded_phone: None,
            is_externally_registered: None,
            message_samples: None,
            messaging_service_sid: None,
            mock: None,
            rate_limits: None,
            sid: None,
            url: None,
            us_app_to_person_usecase: None,
        }
    }
}
