/*
 * Twilio - Notify
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.20.3
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct NotifyV1ServiceNotification {
    /// The SID of the Account that created the resource
    #[serde(rename = "account_sid", skip_serializing_if = "Option::is_none")]
    pub account_sid: Option<String>,
    /// The actions to display for the notification
    #[serde(rename = "action", skip_serializing_if = "Option::is_none")]
    pub action: Option<String>,
    /// Deprecated
    #[serde(rename = "alexa", skip_serializing_if = "Option::is_none")]
    pub alexa: Option<serde_json::Value>,
    /// The APNS-specific payload that overrides corresponding attributes in a generic payload for APNS Bindings
    #[serde(rename = "apn", skip_serializing_if = "Option::is_none")]
    pub apn: Option<serde_json::Value>,
    /// The notification body text
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<String>,
    /// The custom key-value pairs of the notification's payload
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<serde_json::Value>,
    /// The RFC 2822 date and time in GMT when the resource was created
    #[serde(rename = "date_created", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// Deprecated
    #[serde(rename = "facebook_messenger", skip_serializing_if = "Option::is_none")]
    pub facebook_messenger: Option<serde_json::Value>,
    /// The FCM-specific payload that overrides corresponding attributes in generic payload for FCM Bindings
    #[serde(rename = "fcm", skip_serializing_if = "Option::is_none")]
    pub fcm: Option<serde_json::Value>,
    /// The GCM-specific payload that overrides corresponding attributes in generic payload for GCM Bindings
    #[serde(rename = "gcm", skip_serializing_if = "Option::is_none")]
    pub gcm: Option<serde_json::Value>,
    /// The list of identity values of the Users to notify
    #[serde(rename = "identities", skip_serializing_if = "Option::is_none")]
    pub identities: Option<Vec<String>>,
    /// The priority of the notification
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<Priority>,
    /// The list of Segments to notify
    #[serde(rename = "segments", skip_serializing_if = "Option::is_none")]
    pub segments: Option<Vec<String>>,
    /// The SID of the Service that the resource is associated with
    #[serde(rename = "service_sid", skip_serializing_if = "Option::is_none")]
    pub service_sid: Option<String>,
    /// The unique string that identifies the resource
    #[serde(rename = "sid", skip_serializing_if = "Option::is_none")]
    pub sid: Option<String>,
    /// The SMS-specific payload that overrides corresponding attributes in generic payload for SMS Bindings
    #[serde(rename = "sms", skip_serializing_if = "Option::is_none")]
    pub sms: Option<serde_json::Value>,
    /// The name of the sound to be played for the notification
    #[serde(rename = "sound", skip_serializing_if = "Option::is_none")]
    pub sound: Option<String>,
    /// The tags that select the Bindings to notify
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    /// The notification title
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// How long, in seconds, the notification is valid
    #[serde(rename = "ttl", skip_serializing_if = "Option::is_none")]
    pub ttl: Option<i32>,
}

impl NotifyV1ServiceNotification {
    pub fn new() -> NotifyV1ServiceNotification {
        NotifyV1ServiceNotification {
            account_sid: None,
            action: None,
            alexa: None,
            apn: None,
            body: None,
            data: None,
            date_created: None,
            facebook_messenger: None,
            fcm: None,
            gcm: None,
            identities: None,
            priority: None,
            segments: None,
            service_sid: None,
            sid: None,
            sms: None,
            sound: None,
            tags: None,
            title: None,
            ttl: None,
        }
    }
}

/// The priority of the notification
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Priority {
    #[serde(rename = "high")]
    High,
    #[serde(rename = "low")]
    Low,
}
