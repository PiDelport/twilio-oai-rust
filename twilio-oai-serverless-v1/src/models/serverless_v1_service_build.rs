/*
 * Twilio - Serverless
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.20.2
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ServerlessV1ServiceBuild {
    /// The SID of the Account that created the Build resource
    #[serde(rename = "account_sid", skip_serializing_if = "Option::is_none")]
    pub account_sid: Option<String>,
    /// The list of Asset Version resource SIDs that are included in the Build
    #[serde(rename = "asset_versions", skip_serializing_if = "Option::is_none")]
    pub asset_versions: Option<Vec<serde_json::Value>>,
    /// The ISO 8601 date and time in GMT when the Build resource was created
    #[serde(rename = "date_created", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// The ISO 8601 date and time in GMT when the Build resource was last updated
    #[serde(rename = "date_updated", skip_serializing_if = "Option::is_none")]
    pub date_updated: Option<String>,
    /// A list of objects that describe the Dependencies included in the Build
    #[serde(rename = "dependencies", skip_serializing_if = "Option::is_none")]
    pub dependencies: Option<Vec<serde_json::Value>>,
    /// The list of Function Version resource SIDs that are included in the Build
    #[serde(rename = "function_versions", skip_serializing_if = "Option::is_none")]
    pub function_versions: Option<Vec<serde_json::Value>>,
    #[serde(rename = "links", skip_serializing_if = "Option::is_none")]
    pub links: Option<serde_json::Value>,
    /// The Runtime version that will be used to run the Build.
    #[serde(rename = "runtime", skip_serializing_if = "Option::is_none")]
    pub runtime: Option<Runtime>,
    /// The SID of the Service that the Build resource is associated with
    #[serde(rename = "service_sid", skip_serializing_if = "Option::is_none")]
    pub service_sid: Option<String>,
    /// The unique string that identifies the Build resource
    #[serde(rename = "sid", skip_serializing_if = "Option::is_none")]
    pub sid: Option<String>,
    /// The status of the Build
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// The absolute URL of the Build resource
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl ServerlessV1ServiceBuild {
    pub fn new() -> ServerlessV1ServiceBuild {
        ServerlessV1ServiceBuild {
            account_sid: None,
            asset_versions: None,
            date_created: None,
            date_updated: None,
            dependencies: None,
            function_versions: None,
            links: None,
            runtime: None,
            service_sid: None,
            sid: None,
            status: None,
            url: None,
        }
    }
}

/// The Runtime version that will be used to run the Build.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Runtime {
    #[serde(rename = "node8")]
    Node8,
    #[serde(rename = "node10")]
    Node10,
    #[serde(rename = "node12")]
    Node12,
}
/// The status of the Build
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "building")]
    Building,
    #[serde(rename = "completed")]
    Completed,
    #[serde(rename = "failed")]
    Failed,
}

