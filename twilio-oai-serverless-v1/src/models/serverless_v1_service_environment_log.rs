/*
 * Twilio - Serverless
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.20.2
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ServerlessV1ServiceEnvironmentLog {
    /// The SID of the Account that created the Log resource
    #[serde(rename = "account_sid", skip_serializing_if = "Option::is_none")]
    pub account_sid: Option<String>,
    /// The SID of the build that corresponds to the log
    #[serde(rename = "build_sid", skip_serializing_if = "Option::is_none")]
    pub build_sid: Option<String>,
    /// The ISO 8601 date and time in GMT when the Log resource was created
    #[serde(rename = "date_created", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// The SID of the deployment that corresponds to the log
    #[serde(rename = "deployment_sid", skip_serializing_if = "Option::is_none")]
    pub deployment_sid: Option<String>,
    /// The SID of the environment in which the log occurred
    #[serde(rename = "environment_sid", skip_serializing_if = "Option::is_none")]
    pub environment_sid: Option<String>,
    /// The SID of the function whose invocation produced the log
    #[serde(rename = "function_sid", skip_serializing_if = "Option::is_none")]
    pub function_sid: Option<String>,
    /// The log level
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<Level>,
    /// The log message
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    /// The SID of the request associated with the log
    #[serde(rename = "request_sid", skip_serializing_if = "Option::is_none")]
    pub request_sid: Option<String>,
    /// The SID of the Service that the Log resource is associated with
    #[serde(rename = "service_sid", skip_serializing_if = "Option::is_none")]
    pub service_sid: Option<String>,
    /// The unique string that identifies the Log resource
    #[serde(rename = "sid", skip_serializing_if = "Option::is_none")]
    pub sid: Option<String>,
    /// The absolute URL of the Log resource
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl ServerlessV1ServiceEnvironmentLog {
    pub fn new() -> ServerlessV1ServiceEnvironmentLog {
        ServerlessV1ServiceEnvironmentLog {
            account_sid: None,
            build_sid: None,
            date_created: None,
            deployment_sid: None,
            environment_sid: None,
            function_sid: None,
            level: None,
            message: None,
            request_sid: None,
            service_sid: None,
            sid: None,
            url: None,
        }
    }
}

/// The log level
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Level {
    #[serde(rename = "info")]
    Info,
    #[serde(rename = "warn")]
    Warn,
    #[serde(rename = "error")]
    Error,
}

