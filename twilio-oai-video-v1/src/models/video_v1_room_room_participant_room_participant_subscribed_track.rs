/*
 * Twilio - Video
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.20.3
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VideoV1RoomRoomParticipantRoomParticipantSubscribedTrack {
    /// The ISO 8601 date and time in GMT when the resource was created
    #[serde(rename = "date_created", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// The ISO 8601 date and time in GMT when the resource was last updated
    #[serde(rename = "date_updated", skip_serializing_if = "Option::is_none")]
    pub date_updated: Option<String>,
    /// Whether the track is enabled
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// The track type
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<Kind>,
    /// The track name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The SID of the participant that subscribes to the track
    #[serde(rename = "participant_sid", skip_serializing_if = "Option::is_none")]
    pub participant_sid: Option<String>,
    /// The SID of the participant that publishes the track
    #[serde(rename = "publisher_sid", skip_serializing_if = "Option::is_none")]
    pub publisher_sid: Option<String>,
    /// The SID of the room where the track is published
    #[serde(rename = "room_sid", skip_serializing_if = "Option::is_none")]
    pub room_sid: Option<String>,
    /// The unique string that identifies the resource
    #[serde(rename = "sid", skip_serializing_if = "Option::is_none")]
    pub sid: Option<String>,
    /// The absolute URL of the resource
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl VideoV1RoomRoomParticipantRoomParticipantSubscribedTrack {
    pub fn new() -> VideoV1RoomRoomParticipantRoomParticipantSubscribedTrack {
        VideoV1RoomRoomParticipantRoomParticipantSubscribedTrack {
            date_created: None,
            date_updated: None,
            enabled: None,
            kind: None,
            name: None,
            participant_sid: None,
            publisher_sid: None,
            room_sid: None,
            sid: None,
            url: None,
        }
    }
}

/// The track type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Kind {
    #[serde(rename = "audio")]
    Audio,
    #[serde(rename = "video")]
    Video,
    #[serde(rename = "data")]
    Data,
}

